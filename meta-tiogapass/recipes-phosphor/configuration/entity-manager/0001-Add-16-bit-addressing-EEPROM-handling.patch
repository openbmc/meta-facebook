From 3a67c46ca2de60fd6aeed36c1ef2291d575d8e19 Mon Sep 17 00:00:00 2001
From: Vijay Khemka <vijaykhemka@fb.com>
Date: Tue, 6 Nov 2018 15:51:00 -0800
Subject: [PATCH] Add 16 bit addressing EEPROM handling

Adding 16 bit eeprom addressing for reading data. And also added check
for address 0x50 to 0x57 for all eeprom on i2c bus.

Signed-off-by: Vijay Khemka <vijaykhemka@fb.com>
---
 src/FruDevice.cpp | 32 ++++++++++++++++++++++++++++++--
 1 file changed, 30 insertions(+), 2 deletions(-)

diff --git a/src/FruDevice.cpp b/src/FruDevice.cpp
index 03cfed6..0a2ce1b 100644
--- a/src/FruDevice.cpp
+++ b/src/FruDevice.cpp
@@ -90,6 +90,22 @@ int get_bus_frus(int file, int first, int last, int bus,
                 std::cout << "something at bus " << bus << "addr " << ii
                           << "\n";
             }
+
+            /* EEPROM devices are wired only at address 0x50 to 0x57 */
+            if ((ii < 0x50) || (ii > 0x57))
+            {
+                continue;
+            }
+            /* This is for 16 bit addressing EEPROM device. First an offset
+						 * needs to be written before read data from a offset
+						 */
+            if (i2c_smbus_write_byte_data(file, 0, 0))
+            {
+                std::cerr << "failed to write bus " << bus << " address "
+                          << ii << "\n";
+                continue;
+            }
+
             if (i2c_smbus_read_i2c_block_data(file, 0x0, 0x8,
                                               block_data.data()) < 0)
             {
@@ -117,8 +133,14 @@ int get_bus_frus(int file, int first, int last, int bus,
                     if (area_offset != 0)
                     {
                         area_offset *= 8;
+                        if (i2c_smbus_write_byte_data(file, 0, area_offset))
+                        {
+                            std::cerr << "failed to read bus " << bus
+                                      << " address " << ii << "\n";
+                            return -1;
+                        }
                         if (i2c_smbus_read_i2c_block_data(
-                                file, area_offset, 0x8, block_data.data()) < 0)
+                                file, 0, 0x8, block_data.data()) < 0)
                         {
                             std::cerr << "failed to read bus " << bus
                                       << " address " << ii << "\n";
@@ -133,8 +155,14 @@ int get_bus_frus(int file, int first, int last, int bus,
                         while (length > 0)
                         {
                             auto to_get = std::min(0x20, length);
+                            if (i2c_smbus_write_byte_data(file, 0, area_offset))
+                            {
+                                std::cerr << "failed to read bus " << bus
+                                          << " address " << ii << "\n";
+                                return -1;
+                            }
                             if (i2c_smbus_read_i2c_block_data(
-                                    file, area_offset, to_get,
+                                    file, 0, to_get,
                                     block_data.data()) < 0)
                             {
                                 std::cerr << "failed to read bus " << bus
-- 
2.17.1

